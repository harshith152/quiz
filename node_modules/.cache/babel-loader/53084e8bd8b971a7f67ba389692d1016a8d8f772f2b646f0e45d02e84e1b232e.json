{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harshith2002\\\\quizzie\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './QuizPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = ({\n  getQuizDataById\n}) => {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const navigate = useNavigate();\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [score, setScore] = useState(0);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(null);\n  useEffect(() => {\n    const quizData = getQuizDataById(quizId);\n    if (quizData) {\n      setQuiz(quizData);\n    } else {\n      alert('Quiz not found');\n      navigate('/');\n    }\n  }, [quizId, getQuizDataById, navigate]);\n  const handleNextQuestion = useCallback(() => {\n    if (selectedOption === quiz.questions[currentQuestionIndex].options[quiz.questions[currentQuestionIndex].correctOption]) {\n      setScore(prevScore => prevScore + 1);\n    }\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setSelectedOption(null);\n    } else {\n      setIsQuizCompleted(true);\n    }\n  }, [selectedOption, currentQuestionIndex, quiz === null || quiz === void 0 ? void 0 : quiz.questions]);\n  useEffect(() => {\n    if (quiz && quiz.questions[currentQuestionIndex].timer !== 'OFF') {\n      setTimeLeft(parseInt(quiz.questions[currentQuestionIndex].timer, 10));\n      const timerInterval = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timerInterval);\n            handleNextQuestion();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timerInterval);\n    } else {\n      setTimeLeft(null);\n    }\n  }, [quiz, currentQuestionIndex, handleNextQuestion]);\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-page-loading\",\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  if (isQuizCompleted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-page-outer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-completion-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Congrats, Quiz is completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"Trophy.png\",\n          alt: \"Trophy\",\n          className: \"trophy-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Score is \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"quiz-score\",\n            children: [score, \"/\", quiz.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = quiz.questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page-outer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [currentQuestionIndex + 1, \"/\", quiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: timeLeft < 10 ? `00:0${timeLeft}s` : `00:${timeLeft}s`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: currentQuestion.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-grid\",\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${selectedOption === option ? 'selected' : ''}`,\n          onClick: () => handleOptionSelect(option),\n          children: option.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleNextQuestion,\n        children: currentQuestionIndex < quiz.questions.length - 1 ? 'Next' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"6uAORgMdujE1lRBn+sBsxoSVbhE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","jsxDEV","_jsxDEV","QuizPage","getQuizDataById","_s","quizId","navigate","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","isQuizCompleted","setIsQuizCompleted","timeLeft","setTimeLeft","quizData","alert","handleNextQuestion","questions","options","correctOption","prevScore","length","prevIndex","timer","parseInt","timerInterval","setInterval","prevTime","clearInterval","handleOptionSelect","option","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","currentQuestion","questionText","map","index","onClick","text","_c","$RefreshReg$"],"sources":["C:/Users/harshith2002/quizzie/src/components/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './QuizPage.css';\r\n\r\nconst QuizPage = ({ getQuizDataById }) => {\r\n  const { quizId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const quizData = getQuizDataById(quizId);\r\n    if (quizData) {\r\n      setQuiz(quizData);\r\n    } else {\r\n      alert('Quiz not found');\r\n      navigate('/');\r\n    }\r\n  }, [quizId, getQuizDataById, navigate]);\r\n\r\n  const handleNextQuestion = useCallback(() => {\r\n    if (selectedOption === quiz.questions[currentQuestionIndex].options[quiz.questions[currentQuestionIndex].correctOption]) {\r\n      setScore(prevScore => prevScore + 1);\r\n    }\r\n    \r\n    if (currentQuestionIndex < quiz.questions.length - 1) {\r\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n      setSelectedOption(null);\r\n    } else {\r\n      setIsQuizCompleted(true);\r\n    }\r\n  }, [selectedOption, currentQuestionIndex, quiz?.questions]);\r\n\r\n  useEffect(() => {\r\n    if (quiz && quiz.questions[currentQuestionIndex].timer !== 'OFF') {\r\n      setTimeLeft(parseInt(quiz.questions[currentQuestionIndex].timer, 10));\r\n\r\n      const timerInterval = setInterval(() => {\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(timerInterval);\r\n            handleNextQuestion();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timerInterval);\r\n    } else {\r\n      setTimeLeft(null);\r\n    }\r\n  }, [quiz, currentQuestionIndex, handleNextQuestion]);\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  if (!quiz) {\r\n    return <div className=\"quiz-page-loading\">Loading quiz...</div>;\r\n  }\r\n\r\n  if (isQuizCompleted) {\r\n    return (\r\n      <div className=\"quiz-page-outer\">\r\n        <div className=\"quiz-completion-container\">\r\n          <h2>Congrats, Quiz is completed</h2>\r\n          <img src =\"Trophy.png\" alt=\"Trophy\" className=\"trophy-image\" />\r\n          <p>Your Score is <span className=\"quiz-score\">{score}/{quiz.questions.length}</span></p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentQuestion = quiz.questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"quiz-page-outer\">\r\n      <div className=\"quiz-page\">\r\n        <div className=\"quiz-header\">\r\n          <div className=\"question-count\">\r\n            {currentQuestionIndex + 1}/{quiz.questions.length}\r\n          </div>\r\n          {timeLeft !== null && (\r\n            <div className=\"timer\">\r\n              {timeLeft < 10 ? `00:0${timeLeft}s` : `00:${timeLeft}s`}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"question-text\">\r\n          {currentQuestion.questionText}\r\n        </div>\r\n        <div className=\"options-grid\">\r\n          {currentQuestion.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              className={`option-button ${selectedOption === option ? 'selected' : ''}`}\r\n              onClick={() => handleOptionSelect(option)}\r\n            >\r\n              {option.text}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <button\r\n          className=\"next-button\"\r\n          onClick={handleNextQuestion}\r\n        >\r\n          {currentQuestionIndex < quiz.questions.length - 1 ? 'Next' : 'Submit'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}