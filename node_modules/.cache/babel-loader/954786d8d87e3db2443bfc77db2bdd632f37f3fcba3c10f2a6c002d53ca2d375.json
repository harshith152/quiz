{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harshith2002\\\\quizzie\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = ({\n  getQuizDataById\n}) => {\n  _s();\n  const {\n    quizId\n  } = useParams(); // Retrieve the quiz ID from the URL\n  const navigate = useNavigate();\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  useEffect(() => {\n    // Retrieve the quiz data from localStorage using the quizId\n    const quizData = getQuizDataById(quizId);\n    if (quizData) {\n      setQuiz(quizData);\n    } else {\n      alert('Quiz not found');\n      navigate('/'); // Redirect to home or another page if quiz is not found\n    }\n  }, [quizId, getQuizDataById, navigate]);\n  const handleNextQuestion = useCallback(() => {\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setSelectedOption(null); // Reset selected option for the next question\n    } else {\n      alert('Quiz completed!');\n      // Handle quiz submission or final step\n      navigate('/'); // Redirect to home or another page after quiz completion\n    }\n  }, [currentQuestionIndex, quiz === null || quiz === void 0 ? void 0 : quiz.questions.length, navigate]);\n  useEffect(() => {\n    if (quiz && quiz.questions[currentQuestionIndex].timer !== 'OFF') {\n      setTimeLeft(parseInt(quiz.questions[currentQuestionIndex].timer, 10));\n      const timerInterval = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timerInterval);\n            handleNextQuestion(); // Auto-move to the next question when time runs out\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timerInterval);\n    } else {\n      setTimeLeft(null);\n    }\n  }, [quiz, currentQuestionIndex, handleNextQuestion]);\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = quiz.questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-number\",\n        children: [currentQuestionIndex + 1, \"/\", quiz.questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        style: {\n          color: timeLeft <= 5 ? 'red' : 'black'\n        },\n        children: [\"00:\", timeLeft < 10 ? `0${timeLeft}` : timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-text\",\n      children: currentQuestion.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option-button ${selectedOption === option ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect(option),\n        children: option.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: handleNextQuestion,\n      children: currentQuestionIndex < quiz.questions.length - 1 ? 'Next' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"FrCCwJ/SZcWEdinBIoZgITjmPE8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","jsxDEV","_jsxDEV","QuizPage","getQuizDataById","_s","quizId","navigate","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","timeLeft","setTimeLeft","quizData","alert","handleNextQuestion","questions","length","prevIndex","timer","parseInt","timerInterval","setInterval","prevTime","clearInterval","handleOptionSelect","option","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","className","style","color","questionText","options","map","index","onClick","text","_c","$RefreshReg$"],"sources":["C:/Users/harshith2002/quizzie/src/components/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst QuizPage = ({ getQuizDataById }) => {\r\n  const { quizId } = useParams();  // Retrieve the quiz ID from the URL\r\n  const navigate = useNavigate();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Retrieve the quiz data from localStorage using the quizId\r\n    const quizData = getQuizDataById(quizId);\r\n    if (quizData) {\r\n      setQuiz(quizData);\r\n    } else {\r\n      alert('Quiz not found');\r\n      navigate('/');  // Redirect to home or another page if quiz is not found\r\n    }\r\n  }, [quizId, getQuizDataById, navigate]);\r\n\r\n  const handleNextQuestion = useCallback(() => {\r\n    if (currentQuestionIndex < quiz.questions.length - 1) {\r\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n      setSelectedOption(null); // Reset selected option for the next question\r\n    } else {\r\n      alert('Quiz completed!');\r\n      // Handle quiz submission or final step\r\n      navigate('/');  // Redirect to home or another page after quiz completion\r\n    }\r\n  }, [currentQuestionIndex, quiz?.questions.length, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (quiz && quiz.questions[currentQuestionIndex].timer !== 'OFF') {\r\n      setTimeLeft(parseInt(quiz.questions[currentQuestionIndex].timer, 10));\r\n\r\n      const timerInterval = setInterval(() => {\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(timerInterval);\r\n            handleNextQuestion(); // Auto-move to the next question when time runs out\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timerInterval);\r\n    } else {\r\n      setTimeLeft(null);\r\n    }\r\n  }, [quiz, currentQuestionIndex, handleNextQuestion]);\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  if (!quiz) {\r\n    return <div>Loading quiz...</div>;\r\n  }\r\n\r\n  const currentQuestion = quiz.questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"quiz-page\">\r\n      <div className=\"question-header\">\r\n        <div className=\"question-number\">\r\n          {currentQuestionIndex + 1}/{quiz.questions.length}\r\n        </div>\r\n        {timeLeft !== null && (\r\n          <div className=\"timer\" style={{ color: timeLeft <= 5 ? 'red' : 'black' }}>\r\n            00:{timeLeft < 10 ? `0${timeLeft}` : timeLeft}s\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"question-text\">{currentQuestion.questionText}</div>\r\n      <div className=\"options-container\">\r\n        {currentQuestion.options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            className={`option-button ${selectedOption === option ? 'selected' : ''}`}\r\n            onClick={() => handleOptionSelect(option)}\r\n          >\r\n            {option.text}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button className=\"next-button\" onClick={handleNextQuestion}>\r\n        {currentQuestionIndex < quiz.questions.length - 1 ? 'Next' : 'Submit'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}