{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harshith2002\\\\quizzie\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Auth from './components/Auth';\nimport HomePage from './components/HomePage';\nimport QuizPage from './components/QuizPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    // Initialize from localStorage if available\n    return localStorage.getItem('isAuthenticated') === 'true';\n  });\n  const [userCredentials, setUserCredentials] = useState(() => {\n    const savedCredentials = localStorage.getItem('userCredentials');\n    return savedCredentials ? JSON.parse(savedCredentials) : null;\n  });\n  const [quizzes, setQuizzes] = useState(() => {\n    const savedQuizzes = localStorage.getItem('quizzes');\n    return savedQuizzes ? JSON.parse(savedQuizzes) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('isAuthenticated', isAuthenticated);\n  }, [isAuthenticated]);\n  const handleSignup = (email, password) => {\n    const credentials = {\n      email,\n      password\n    };\n    setUserCredentials(credentials);\n    localStorage.setItem('userCredentials', JSON.stringify(credentials));\n    setIsAuthenticated(false); // Stay on login after signup\n  };\n  const handleLogin = (email, password) => {\n    if (userCredentials && userCredentials.email === email && userCredentials.password === password) {\n      setIsAuthenticated(true);\n    } else {\n      alert(\"Invalid email or password\");\n    }\n  };\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated');\n  };\n  const handleCreateQuiz = newQuiz => {\n    const updatedQuizzes = [...quizzes, newQuiz];\n    setQuizzes(updatedQuizzes);\n    localStorage.setItem('quizzes', JSON.stringify(updatedQuizzes));\n  };\n  const getQuizDataById = quizId => {\n    const savedQuizzes = JSON.parse(localStorage.getItem('quizzes')) || quizzes;\n    return savedQuizzes.find(quiz => quiz.id === quizId);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/home/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Auth, {\n          onLogin: handleLogin,\n          onSignup: handleSignup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home/*\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(HomePage, {\n          onCreateQuiz: handleCreateQuiz,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 102\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quiz/:quizId\",\n        element: /*#__PURE__*/_jsxDEV(QuizPage, {\n          getQuizDataById: getQuizDataById\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 20\n        }, this) // Make QuizPage publicly accessible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ToiFI1lNG3ssQSMBbQ9yw9+UAXQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","Auth","HomePage","QuizPage","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","userCredentials","setUserCredentials","savedCredentials","JSON","parse","quizzes","setQuizzes","savedQuizzes","setItem","handleSignup","email","password","credentials","stringify","handleLogin","alert","handleLogout","removeItem","handleCreateQuiz","newQuiz","updatedQuizzes","getQuizDataById","quizId","find","quiz","id","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onSignup","onCreateQuiz","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/harshith2002/quizzie/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Auth from './components/Auth';\nimport HomePage from './components/HomePage';\nimport QuizPage from './components/QuizPage'; \n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    // Initialize from localStorage if available\n    return localStorage.getItem('isAuthenticated') === 'true';\n  });\n  const [userCredentials, setUserCredentials] = useState(() => {\n    const savedCredentials = localStorage.getItem('userCredentials');\n    return savedCredentials ? JSON.parse(savedCredentials) : null;\n  });\n  const [quizzes, setQuizzes] = useState(() => {\n    const savedQuizzes = localStorage.getItem('quizzes');\n    return savedQuizzes ? JSON.parse(savedQuizzes) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('isAuthenticated', isAuthenticated);\n  }, [isAuthenticated]);\n\n  const handleSignup = (email, password) => {\n    const credentials = { email, password };\n    setUserCredentials(credentials);\n    localStorage.setItem('userCredentials', JSON.stringify(credentials));\n    setIsAuthenticated(false); // Stay on login after signup\n  };\n\n  const handleLogin = (email, password) => {\n    if (userCredentials && userCredentials.email === email && userCredentials.password === password) {\n      setIsAuthenticated(true);\n    } else {\n      alert(\"Invalid email or password\");\n    }\n  };\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated');\n  };\n\n  const handleCreateQuiz = (newQuiz) => {\n    const updatedQuizzes = [...quizzes, newQuiz];\n    setQuizzes(updatedQuizzes);\n    localStorage.setItem('quizzes', JSON.stringify(updatedQuizzes));\n  };\n\n  const getQuizDataById = (quizId) => {\n    const savedQuizzes = JSON.parse(localStorage.getItem('quizzes')) || quizzes;\n    return savedQuizzes.find(quiz => quiz.id === quizId);\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route\n          path=\"/login\"\n          element={\n            isAuthenticated ? <Navigate to=\"/home/dashboard\" /> : <Auth onLogin={handleLogin} onSignup={handleSignup} />\n          }\n        />\n        <Route\n          path=\"/home/*\"\n          element={\n            isAuthenticated ? <HomePage onCreateQuiz={handleCreateQuiz} onLogout={handleLogout} /> : <Navigate to=\"/login\" />\n          }\n        />\n        <Route\n          path=\"/quiz/:quizId\"\n          element={<QuizPage getQuizDataById={getQuizDataById} />} // Make QuizPage publicly accessible\n        />\n        <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}