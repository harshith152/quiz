{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harshith2002\\\\quizzie\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Auth from './components/Auth';\nimport HomePage from './components/HomePage';\nimport QuizPage from './components/QuizPage'; // Import the QuizPage component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userCredentials, setUserCredentials] = useState(null);\n  const [quizzes, setQuizzes] = useState(() => {\n    // Initialize quizzes from localStorage if available\n    const savedQuizzes = localStorage.getItem('quizzes');\n    return savedQuizzes ? JSON.parse(savedQuizzes) : [];\n  });\n\n  // Load user credentials from localStorage on component mount\n  useEffect(() => {\n    const savedCredentials = localStorage.getItem('userCredentials');\n    if (savedCredentials) {\n      setUserCredentials(JSON.parse(savedCredentials));\n    }\n  }, []);\n  const handleSignup = (email, password) => {\n    const credentials = {\n      email,\n      password\n    };\n    localStorage.setItem('userCredentials', JSON.stringify(credentials)); // Save credentials to localStorage\n    setUserCredentials(credentials);\n    setIsAuthenticated(false); // Ensure user is not logged in after signup\n  };\n  const handleLogin = (email, password) => {\n    if (userCredentials && userCredentials.email === email && userCredentials.password === password) {\n      setIsAuthenticated(true);\n    } else {\n      alert(\"Invalid email or password\");\n    }\n  };\n  const handleCreateQuiz = newQuiz => {\n    const updatedQuizzes = [...quizzes, newQuiz];\n    setQuizzes(updatedQuizzes);\n    // Save to localStorage to persist quizzes across sessions\n    localStorage.setItem('quizzes', JSON.stringify(updatedQuizzes));\n  };\n  const getQuizDataById = quizId => {\n    const savedQuizzes = JSON.parse(localStorage.getItem('quizzes')) || quizzes;\n    return savedQuizzes.find(quiz => quiz.id === quizId);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/home/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Auth, {\n          onLogin: handleLogin,\n          onSignup: handleSignup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home/*\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(HomePage, {\n          onCreateQuiz: handleCreateQuiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quiz/:quizId\",\n        element: /*#__PURE__*/_jsxDEV(QuizPage, {\n          getQuizDataById: getQuizDataById\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }, this) // Make QuizPage publicly accessible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: isAuthenticated ? \"/home/dashboard\" : \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HlB0iMok3wZ0bpikgjTFYVhDQT8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","Auth","HomePage","QuizPage","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","userCredentials","setUserCredentials","quizzes","setQuizzes","savedQuizzes","localStorage","getItem","JSON","parse","savedCredentials","handleSignup","email","password","credentials","setItem","stringify","handleLogin","alert","handleCreateQuiz","newQuiz","updatedQuizzes","getQuizDataById","quizId","find","quiz","id","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onSignup","onCreateQuiz","_c","$RefreshReg$"],"sources":["C:/Users/harshith2002/quizzie/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Auth from './components/Auth';\nimport HomePage from './components/HomePage';\nimport QuizPage from './components/QuizPage'; // Import the QuizPage component\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userCredentials, setUserCredentials] = useState(null);\n  const [quizzes, setQuizzes] = useState(() => {\n    // Initialize quizzes from localStorage if available\n    const savedQuizzes = localStorage.getItem('quizzes');\n    return savedQuizzes ? JSON.parse(savedQuizzes) : [];\n  });\n\n  // Load user credentials from localStorage on component mount\n  useEffect(() => {\n    const savedCredentials = localStorage.getItem('userCredentials');\n    if (savedCredentials) {\n      setUserCredentials(JSON.parse(savedCredentials));\n    }\n  }, []);\n\n  const handleSignup = (email, password) => {\n    const credentials = { email, password };\n    localStorage.setItem('userCredentials', JSON.stringify(credentials)); // Save credentials to localStorage\n    setUserCredentials(credentials);\n    setIsAuthenticated(false); // Ensure user is not logged in after signup\n  };\n\n  const handleLogin = (email, password) => {\n    if (userCredentials && userCredentials.email === email && userCredentials.password === password) {\n      setIsAuthenticated(true);\n    } else {\n      alert(\"Invalid email or password\");\n    }\n  };\n\n  const handleCreateQuiz = (newQuiz) => {\n    const updatedQuizzes = [...quizzes, newQuiz];\n    setQuizzes(updatedQuizzes);\n    // Save to localStorage to persist quizzes across sessions\n    localStorage.setItem('quizzes', JSON.stringify(updatedQuizzes));\n  };\n\n  const getQuizDataById = (quizId) => {\n    const savedQuizzes = JSON.parse(localStorage.getItem('quizzes')) || quizzes;\n    return savedQuizzes.find(quiz => quiz.id === quizId);\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route\n          path=\"/login\"\n          element={\n            isAuthenticated ? <Navigate to=\"/home/dashboard\" /> : <Auth onLogin={handleLogin} onSignup={handleSignup} />\n          }\n        />\n        <Route\n          path=\"/home/*\"\n          element={\n            isAuthenticated ? <HomePage onCreateQuiz={handleCreateQuiz} /> : <Navigate to=\"/login\" />\n          }\n        />\n        <Route\n          path=\"/quiz/:quizId\"\n          element={<QuizPage getQuizDataById={getQuizDataById} />} // Make QuizPage publicly accessible\n        />\n        <Route path=\"*\" element={<Navigate to={isAuthenticated ? \"/home/dashboard\" : \"/login\"} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}