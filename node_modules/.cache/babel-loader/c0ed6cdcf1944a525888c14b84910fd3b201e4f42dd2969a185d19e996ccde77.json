{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harshith2002\\\\quizzie\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    quizId\n  } = useParams(); // Retrieve the quiz ID from the URL\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  useEffect(() => {\n    // Retrieve the quiz data from localStorage using the quizId\n    const quizzes = JSON.parse(localStorage.getItem('quizzes')) || [];\n    const foundQuiz = quizzes.find(q => q.id === quizId);\n    if (foundQuiz) {\n      setQuiz(foundQuiz);\n    } else {\n      alert('Quiz not found');\n    }\n  }, [quizId]);\n  const currentQuestion = quiz ? quiz.questions[currentQuestionIndex] : null;\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(null);\n    } else {\n      alert('Quiz completed!');\n      // Handle quiz submission or final actions\n    }\n  };\n  useEffect(() => {\n    if (currentQuestion && currentQuestion.timer && currentQuestion.timer !== 'OFF') {\n      setTimeLeft(parseInt(currentQuestion.timer, 10));\n      const timerInterval = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timerInterval);\n            handleNextQuestion(); // Auto-move to the next question when time runs out\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timerInterval);\n    } else {\n      setTimeLeft(null);\n    }\n  }, [currentQuestion, handleNextQuestion]);\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-number\",\n        children: [currentQuestionIndex + 1, \"/\", quiz.questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        style: {\n          color: timeLeft <= 5 ? 'red' : 'black'\n        },\n        children: [\"00:\", timeLeft < 10 ? `0${timeLeft}` : timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-text\",\n      children: currentQuestion.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option-button ${selectedOption === option ? 'selected' : ''}`,\n        onClick: () => setSelectedOption(option),\n        children: option.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: handleNextQuestion,\n      children: currentQuestionIndex < quiz.questions.length - 1 ? 'Next' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"QsxV+MbamhY1IxPSyKXFS6tGBkU=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","QuizPage","_s","quizId","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","timeLeft","setTimeLeft","quizzes","JSON","parse","localStorage","getItem","foundQuiz","find","q","id","alert","currentQuestion","questions","handleNextQuestion","length","timer","parseInt","timerInterval","setInterval","prevTime","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","questionText","options","map","option","index","onClick","text","_c","$RefreshReg$"],"sources":["C:/Users/harshith2002/quizzie/src/components/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst QuizPage = () => {\r\n  const { quizId } = useParams();  // Retrieve the quiz ID from the URL\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Retrieve the quiz data from localStorage using the quizId\r\n    const quizzes = JSON.parse(localStorage.getItem('quizzes')) || [];\r\n    const foundQuiz = quizzes.find(q => q.id === quizId);\r\n    if (foundQuiz) {\r\n      setQuiz(foundQuiz);\r\n    } else {\r\n      alert('Quiz not found');\r\n    }\r\n  }, [quizId]);\r\n\r\n  const currentQuestion = quiz ? quiz.questions[currentQuestionIndex] : null;\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestionIndex < quiz.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setSelectedOption(null);\r\n    } else {\r\n      alert('Quiz completed!');\r\n      // Handle quiz submission or final actions\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentQuestion && currentQuestion.timer && currentQuestion.timer !== 'OFF') {\r\n      setTimeLeft(parseInt(currentQuestion.timer, 10));\r\n\r\n      const timerInterval = setInterval(() => {\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(timerInterval);\r\n            handleNextQuestion(); // Auto-move to the next question when time runs out\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timerInterval);\r\n    } else {\r\n      setTimeLeft(null);\r\n    }\r\n  }, [currentQuestion, handleNextQuestion]);\r\n\r\n  if (!quiz) {\r\n    return <div>Loading quiz...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-page\">\r\n      <div className=\"question-header\">\r\n        <div className=\"question-number\">\r\n          {currentQuestionIndex + 1}/{quiz.questions.length}\r\n        </div>\r\n        {timeLeft !== null && (\r\n          <div className=\"timer\" style={{ color: timeLeft <= 5 ? 'red' : 'black' }}>\r\n            00:{timeLeft < 10 ? `0${timeLeft}` : timeLeft}s\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"question-text\">{currentQuestion.questionText}</div>\r\n      <div className=\"options-container\">\r\n        {currentQuestion.options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            className={`option-button ${selectedOption === option ? 'selected' : ''}`}\r\n            onClick={() => setSelectedOption(option)}\r\n          >\r\n            {option.text}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button className=\"next-button\" onClick={handleNextQuestion}>\r\n        {currentQuestionIndex < quiz.questions.length - 1 ? 'Next' : 'Submit'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}