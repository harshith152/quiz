{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harshith2002\\\\quizzie\\\\src\\\\components\\\\Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  onContinue\n}) => {\n  _s();\n  const [quizName, setQuizName] = useState('');\n  const [quizType, setQuizType] = useState('');\n  const handleQuizTypeChange = type => {\n    setQuizType(type);\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Quiz name\",\n          value: quizName,\n          onChange: e => setQuizName(e.target.value),\n          className: \"quiz-name-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-type-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"quiz-type-label\",\n            children: \"Quiz Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `quiz-type-button ${quizType === 'Q&A' ? 'active' : ''}`,\n            onClick: () => handleQuizTypeChange('Q&A'),\n            children: \"Q & A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `quiz-type-button ${quizType === 'Poll' ? 'active' : ''}`,\n            onClick: () => handleQuizTypeChange('Poll'),\n            children: \"Poll Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-button cancel-button\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-button continue-button\",\n          onClick: () => onContinue(quizName, quizType),\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"5ie79BZSMHeAoTwJgz0/JcAItSc=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Modal","isOpen","onClose","onContinue","_s","quizName","setQuizName","quizType","setQuizType","handleQuizTypeChange","type","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/harshith2002/quizzie/src/components/Modal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onContinue }) => {\r\n  const [quizName, setQuizName] = useState('');\r\n  const [quizType, setQuizType] = useState('');\r\n\r\n  const handleQuizTypeChange = (type) => {\r\n    setQuizType(type);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Quiz name\"\r\n            value={quizName}\r\n            onChange={(e) => setQuizName(e.target.value)}\r\n            className=\"quiz-name-input\"\r\n          />\r\n          <div className=\"quiz-type-container\">\r\n            <label className=\"quiz-type-label\">Quiz Type</label>\r\n            <button\r\n              className={`quiz-type-button ${quizType === 'Q&A' ? 'active' : ''}`}\r\n              onClick={() => handleQuizTypeChange('Q&A')}\r\n            >\r\n              Q & A\r\n            </button>\r\n            <button\r\n              className={`quiz-type-button ${quizType === 'Poll' ? 'active' : ''}`}\r\n              onClick={() => handleQuizTypeChange('Poll')}\r\n            >\r\n              Poll Type\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-buttons\">\r\n          <button className=\"modal-button cancel-button\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n          <button\r\n            className=\"modal-button continue-button\"\r\n            onClick={() => onContinue(quizName, quizType)}\r\n          >\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}