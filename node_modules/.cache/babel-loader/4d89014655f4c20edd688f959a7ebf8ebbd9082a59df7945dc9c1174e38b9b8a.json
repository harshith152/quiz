{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harshith2002\\\\quizzie\\\\src\\\\components\\\\CreateQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QAQuestionModal from './QAQuestionModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateQuiz = () => {\n  _s();\n  const [quizType, setQuizType] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleQuizTypeSelection = type => {\n    setQuizType(type);\n    setIsModalOpen(true);\n  };\n  const handleCreateQuiz = questions => {\n    console.log('Quiz Created:', {\n      quizType,\n      questions\n    });\n    setIsModalOpen(false);\n  };\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setQuizType(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-type-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleQuizTypeSelection('Q&A'),\n        children: \"Q&A Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleQuizTypeSelection('Poll'),\n        children: \"Poll Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(QAQuestionModal, {\n      isOpen: isModalOpen,\n      onClose: handleModalClose,\n      onCreateQuiz: handleCreateQuiz,\n      quizType: quizType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateQuiz, \"WNfnOquI/h/e5H2lxf8DgbzOks8=\");\n_c = CreateQuiz;\nexport default CreateQuiz;\nvar _c;\n$RefreshReg$(_c, \"CreateQuiz\");","map":{"version":3,"names":["React","useState","QAQuestionModal","jsxDEV","_jsxDEV","CreateQuiz","_s","quizType","setQuizType","isModalOpen","setIsModalOpen","handleQuizTypeSelection","type","handleCreateQuiz","questions","console","log","handleModalClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","onCreateQuiz","_c","$RefreshReg$"],"sources":["C:/Users/harshith2002/quizzie/src/components/CreateQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QAQuestionModal from './QAQuestionModal';\r\n\r\nconst CreateQuiz = () => {\r\n  const [quizType, setQuizType] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleQuizTypeSelection = (type) => {\r\n    setQuizType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCreateQuiz = (questions) => {\r\n    console.log('Quiz Created:', {\r\n      quizType,\r\n      questions,\r\n    });\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false);\r\n    setQuizType(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-quiz-container\">\r\n      <h2>Create a New Quiz</h2>\r\n      <div className=\"quiz-type-selection\">\r\n        <button onClick={() => handleQuizTypeSelection('Q&A')}>Q&A Type</button>\r\n        <button onClick={() => handleQuizTypeSelection('Poll')}>Poll Type</button>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <QAQuestionModal\r\n          isOpen={isModalOpen}\r\n          onClose={handleModalClose}\r\n          onCreateQuiz={handleCreateQuiz}\r\n          quizType={quizType}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMU,uBAAuB,GAAIC,IAAI,IAAK;IACxCJ,WAAW,CAACI,IAAI,CAAC;IACjBF,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMG,gBAAgB,GAAIC,SAAS,IAAK;IACtCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE;MAC3BT,QAAQ;MACRO;IACF,CAAC,CAAC;IACFJ,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BP,cAAc,CAAC,KAAK,CAAC;IACrBF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEJ,OAAA;IAAKc,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCf,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAMb,uBAAuB,CAAC,KAAK,CAAE;QAAAQ,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxEnB,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAMb,uBAAuB,CAAC,MAAM,CAAE;QAAAQ,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,EAELd,WAAW,iBACVL,OAAA,CAACF,eAAe;MACduB,MAAM,EAAEhB,WAAY;MACpBiB,OAAO,EAAET,gBAAiB;MAC1BU,YAAY,EAAEd,gBAAiB;MAC/BN,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxCID,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}