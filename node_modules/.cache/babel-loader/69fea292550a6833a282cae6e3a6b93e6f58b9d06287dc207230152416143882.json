{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Modal.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Modal=_ref=>{let{isOpen,onClose,onContinue}=_ref;const[quizName,setQuizName]=useState('');const[quizType,setQuizType]=useState('Q&A');// Set default quiz type to 'Q&A'\nuseEffect(()=>{if(isOpen){// Reset quiz name and type when modal is opened\nsetQuizName('');setQuizType('Q&A');}},[isOpen]);const handleQuizTypeChange=type=>{setQuizType(type);};if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Quiz name\",value:quizName,onChange:e=>setQuizName(e.target.value),className:\"quiz-name-input\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-type-container\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"quiz-type-label\",children:\"Quiz Type\"}),/*#__PURE__*/_jsx(\"button\",{className:`quiz-type-button ${quizType==='Q&A'?'active':''}`,onClick:()=>handleQuizTypeChange('Q&A'),children:\"Q & A\"}),/*#__PURE__*/_jsx(\"button\",{className:`quiz-type-button ${quizType==='Poll'?'active':''}`,onClick:()=>handleQuizTypeChange('Poll'),children:\"Poll Type\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"modal-button cancel-button\",onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-button continue-button\",onClick:()=>onContinue(quizName,quizType),disabled:!quizName||!quizType// Disable if no quiz name or type is selected\n,children:\"Continue\"})]})]})});};export default Modal;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Modal","_ref","isOpen","onClose","onContinue","quizName","setQuizName","quizType","setQuizType","handleQuizTypeChange","type","className","children","placeholder","value","onChange","e","target","onClick","disabled"],"sources":["C:/Users/harshith2002/quizzie/src/components/Modal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onContinue }) => {\r\n  const [quizName, setQuizName] = useState('');\r\n  const [quizType, setQuizType] = useState('Q&A'); // Set default quiz type to 'Q&A'\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // Reset quiz name and type when modal is opened\r\n      setQuizName('');\r\n      setQuizType('Q&A');\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleQuizTypeChange = (type) => {\r\n    setQuizType(type);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Quiz name\"\r\n            value={quizName}\r\n            onChange={(e) => setQuizName(e.target.value)}\r\n            className=\"quiz-name-input\"\r\n          />\r\n          <div className=\"quiz-type-container\">\r\n            <label className=\"quiz-type-label\">Quiz Type</label>\r\n            <button\r\n              className={`quiz-type-button ${quizType === 'Q&A' ? 'active' : ''}`}\r\n              onClick={() => handleQuizTypeChange('Q&A')}\r\n            >\r\n              Q & A\r\n            </button>\r\n            <button\r\n              className={`quiz-type-button ${quizType === 'Poll' ? 'active' : ''}`}\r\n              onClick={() => handleQuizTypeChange('Poll')}\r\n            >\r\n              Poll Type\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-buttons\">\r\n          <button className=\"modal-button cancel-button\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n          <button\r\n            className=\"modal-button continue-button\"\r\n            onClick={() => onContinue(quizName, quizType)}\r\n            disabled={!quizName || !quizType} // Disable if no quiz name or type is selected\r\n          >\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAqC,IAApC,CAAEC,MAAM,CAAEC,OAAO,CAAEC,UAAW,CAAC,CAAAH,IAAA,CAC5C,KAAM,CAACI,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAAE;AAEjDC,SAAS,CAAC,IAAM,CACd,GAAIO,MAAM,CAAE,CACV;AACAI,WAAW,CAAC,EAAE,CAAC,CACfE,WAAW,CAAC,KAAK,CAAC,CACpB,CACF,CAAC,CAAE,CAACN,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAO,oBAAoB,CAAIC,IAAI,EAAK,CACrCF,WAAW,CAACE,IAAI,CAAC,CACnB,CAAC,CAED,GAAI,CAACR,MAAM,CAAE,MAAO,KAAI,CAExB,mBACEL,IAAA,QAAKc,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5Bb,KAAA,QAAKY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5Bb,KAAA,QAAKY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3Bf,IAAA,UACEa,IAAI,CAAC,MAAM,CACXG,WAAW,CAAC,WAAW,CACvBC,KAAK,CAAET,QAAS,CAChBU,QAAQ,CAAGC,CAAC,EAAKV,WAAW,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CH,SAAS,CAAC,iBAAiB,CAC5B,CAAC,cACFZ,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCf,IAAA,UAAOc,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,WAAS,CAAO,CAAC,cACpDf,IAAA,WACEc,SAAS,CAAE,oBAAoBJ,QAAQ,GAAK,KAAK,CAAG,QAAQ,CAAG,EAAE,EAAG,CACpEW,OAAO,CAAEA,CAAA,GAAMT,oBAAoB,CAAC,KAAK,CAAE,CAAAG,QAAA,CAC5C,OAED,CAAQ,CAAC,cACTf,IAAA,WACEc,SAAS,CAAE,oBAAoBJ,QAAQ,GAAK,MAAM,CAAG,QAAQ,CAAG,EAAE,EAAG,CACrEW,OAAO,CAAEA,CAAA,GAAMT,oBAAoB,CAAC,MAAM,CAAE,CAAAG,QAAA,CAC7C,WAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cACNb,KAAA,QAAKY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5Bf,IAAA,WAAQc,SAAS,CAAC,4BAA4B,CAACO,OAAO,CAAEf,OAAQ,CAAAS,QAAA,CAAC,QAEjE,CAAQ,CAAC,cACTf,IAAA,WACEc,SAAS,CAAC,8BAA8B,CACxCO,OAAO,CAAEA,CAAA,GAAMd,UAAU,CAACC,QAAQ,CAAEE,QAAQ,CAAE,CAC9CY,QAAQ,CAAE,CAACd,QAAQ,EAAI,CAACE,QAAU;AAAA,CAAAK,QAAA,CACnC,UAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAZ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}