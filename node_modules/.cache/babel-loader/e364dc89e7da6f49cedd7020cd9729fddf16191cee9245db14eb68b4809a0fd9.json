{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useParams,useNavigate}from'react-router-dom';import'./QuizPage.css';import trophyImage from'../Assets/images/Trophy.png';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const QuizPage=_ref=>{let{getQuizDataById}=_ref;const{quizId}=useParams();const navigate=useNavigate();const[quiz,setQuiz]=useState(null);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[selectedOption,setSelectedOption]=useState(null);const[timeLeft,setTimeLeft]=useState(null);const[showCompletionMessage,setShowCompletionMessage]=useState(false);const[score,setScore]=useState(0);const[isNextDisabled,setIsNextDisabled]=useState(false);useEffect(()=>{const quizData=getQuizDataById(quizId);if(quizData){setQuiz(quizData);}else{alert('Quiz not found');navigate('/');}},[quizId,getQuizDataById,navigate]);const handleNextQuestion=useCallback(()=>{setIsNextDisabled(true);if(selectedOption!==null&&(quiz===null||quiz===void 0?void 0:quiz.globalOptionType)==='Q&A'&&quiz.questions[currentQuestionIndex].correctOption===selectedOption){setScore(prevScore=>prevScore+1);}if(currentQuestionIndex<quiz.questions.length-1){setCurrentQuestionIndex(prevIndex=>prevIndex+1);setSelectedOption(null);}else{setShowCompletionMessage(true);}setIsNextDisabled(false);},[currentQuestionIndex,selectedOption,quiz]);useEffect(()=>{var _quiz$questions,_quiz$questions$curre;if(quiz&&((_quiz$questions=quiz.questions)===null||_quiz$questions===void 0?void 0:(_quiz$questions$curre=_quiz$questions[currentQuestionIndex])===null||_quiz$questions$curre===void 0?void 0:_quiz$questions$curre.timer)!=='OFF'){setTimeLeft(parseInt(quiz.questions[currentQuestionIndex].timer,10));const timerInterval=setInterval(()=>{setTimeLeft(prevTime=>{if(prevTime<=1){clearInterval(timerInterval);handleNextQuestion();return 0;}return prevTime-1;});},1000);return()=>clearInterval(timerInterval);}else{setTimeLeft(null);}},[quiz,currentQuestionIndex,handleNextQuestion]);const handleOptionSelect=index=>{setSelectedOption(index);};if(!quiz){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading quiz...\"});}if(showCompletionMessage){return/*#__PURE__*/_jsx(\"div\",{className:\"quiz-page-outer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"quiz-completion-container\",children:quiz.globalOptionType==='Q&A'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Congrats, Quiz is completed\"}),/*#__PURE__*/_jsx(\"img\",{src:trophyImage,alt:\"Trophy\",className:\"trophy-image\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Score is \",/*#__PURE__*/_jsxs(\"span\",{className:\"quiz-score\",children:[score,\"/\",quiz.questions.length]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/home/dashboard'),children:\"Go to Dashboard\"})]}):/*#__PURE__*/_jsx(\"h2\",{children:\"Thank you for participating in the Poll\"})})});}const currentQuestion=quiz.questions[currentQuestionIndex];return/*#__PURE__*/_jsx(\"div\",{className:\"quiz-page-outer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-count\",children:[currentQuestionIndex+1,\"/\",quiz.questions.length]}),timeLeft!==null&&/*#__PURE__*/_jsx(\"div\",{className:\"timer\",children:timeLeft<10?`00:0${timeLeft}s`:`00:${timeLeft}s`})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:currentQuestion.questionText}),/*#__PURE__*/_jsx(\"div\",{className:\"options-grid\",children:currentQuestion.options.map((option,index)=>/*#__PURE__*/_jsx(\"button\",{className:`option-button ${selectedOption===index?'selected':''}`,onClick:()=>handleOptionSelect(index),children:option.imageUrl?/*#__PURE__*/_jsx(\"img\",{src:option.imageUrl,alt:`Option ${index+1}`,className:\"option-image\"}):option.text},index))}),/*#__PURE__*/_jsx(\"button\",{className:\"next-button\",onClick:handleNextQuestion,disabled:isNextDisabled,children:currentQuestionIndex<quiz.questions.length-1?'Next':'Submit'})]})});};export default QuizPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","trophyImage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuizPage","_ref","getQuizDataById","quizId","navigate","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","timeLeft","setTimeLeft","showCompletionMessage","setShowCompletionMessage","score","setScore","isNextDisabled","setIsNextDisabled","quizData","alert","handleNextQuestion","globalOptionType","questions","correctOption","prevScore","length","prevIndex","_quiz$questions","_quiz$questions$curre","timer","parseInt","timerInterval","setInterval","prevTime","clearInterval","handleOptionSelect","index","children","className","src","alt","onClick","currentQuestion","questionText","options","map","option","imageUrl","text","disabled"],"sources":["C:/Users/harshith2002/quizzie/src/components/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './QuizPage.css';\r\nimport trophyImage from '../Assets/images/Trophy.png';\r\n\r\nconst QuizPage = ({ getQuizDataById }) => {\r\n  const { quizId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  const [showCompletionMessage, setShowCompletionMessage] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [isNextDisabled, setIsNextDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const quizData = getQuizDataById(quizId);\r\n    if (quizData) {\r\n      setQuiz(quizData);\r\n    } else {\r\n      alert('Quiz not found');\r\n      navigate('/');\r\n    }\r\n  }, [quizId, getQuizDataById, navigate]);\r\n\r\n  const handleNextQuestion = useCallback(() => {\r\n    setIsNextDisabled(true);\r\n\r\n    if (selectedOption !== null && quiz?.globalOptionType === 'Q&A' && quiz.questions[currentQuestionIndex].correctOption === selectedOption) {\r\n      setScore(prevScore => prevScore + 1);\r\n    }\r\n\r\n    if (currentQuestionIndex < quiz.questions.length - 1) {\r\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\r\n      setSelectedOption(null);\r\n    } else {\r\n      setShowCompletionMessage(true);\r\n    }\r\n\r\n    setIsNextDisabled(false);\r\n  }, [currentQuestionIndex, selectedOption, quiz]);\r\n\r\n  useEffect(() => {\r\n    if (quiz && quiz.questions?.[currentQuestionIndex]?.timer !== 'OFF') {\r\n      setTimeLeft(parseInt(quiz.questions[currentQuestionIndex].timer, 10));\r\n\r\n      const timerInterval = setInterval(() => {\r\n        setTimeLeft(prevTime => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(timerInterval);\r\n            handleNextQuestion();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timerInterval);\r\n    } else {\r\n      setTimeLeft(null);\r\n    }\r\n  }, [quiz, currentQuestionIndex, handleNextQuestion]);\r\n\r\n  const handleOptionSelect = (index) => {\r\n    setSelectedOption(index);\r\n  };\r\n\r\n  if (!quiz) {\r\n    return <div>Loading quiz...</div>;\r\n  }\r\n\r\n  if (showCompletionMessage) {\r\n    return (\r\n      <div className=\"quiz-page-outer\">\r\n        <div className=\"quiz-completion-container\">\r\n          {quiz.globalOptionType === 'Q&A' ? (\r\n            <>\r\n              <h2>Congrats, Quiz is completed</h2>\r\n              <img src={trophyImage} alt=\"Trophy\" className=\"trophy-image\" />\r\n              <p>Your Score is <span className=\"quiz-score\">{score}/{quiz.questions.length}</span></p>\r\n              <button onClick={() => navigate('/home/dashboard')}>Go to Dashboard</button>\r\n            </>\r\n          ) : (\r\n            <h2>Thank you for participating in the Poll</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentQuestion = quiz.questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"quiz-page-outer\">\r\n      <div className=\"quiz-page\">\r\n        <div className=\"quiz-header\">\r\n          <div className=\"question-count\">\r\n            {currentQuestionIndex + 1}/{quiz.questions.length}\r\n          </div>\r\n          {timeLeft !== null && (\r\n            <div className=\"timer\">\r\n              {timeLeft < 10 ? `00:0${timeLeft}s` : `00:${timeLeft}s`}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"question-text\">\r\n          {currentQuestion.questionText}\r\n        </div>\r\n        <div className=\"options-grid\">\r\n          {currentQuestion.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              className={`option-button ${selectedOption === index ? 'selected' : ''}`}\r\n              onClick={() => handleOptionSelect(index)}\r\n            >\r\n              {option.imageUrl ? (\r\n                <img src={option.imageUrl} alt={`Option ${index + 1}`} className=\"option-image\" />\r\n              ) : (\r\n                option.text\r\n              )}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <button\r\n          className=\"next-button\"\r\n          onClick={handleNextQuestion}\r\n          disabled={isNextDisabled}\r\n        >\r\n          {currentQuestionIndex < quiz.questions.length - 1 ? 'Next' : 'Submit'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CACzD,MAAO,gBAAgB,CACvB,MAAO,CAAAC,WAAW,KAAM,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEtD,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAyB,IAAxB,CAAEC,eAAgB,CAAC,CAAAD,IAAA,CACnC,KAAM,CAAEE,MAAO,CAAC,CAAGZ,SAAS,CAAC,CAAC,CAC9B,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACa,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACmB,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGpB,QAAQ,CAAC,CAAC,CAAC,CACnE,KAAM,CAACqB,cAAc,CAAEC,iBAAiB,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACuB,QAAQ,CAAEC,WAAW,CAAC,CAAGxB,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACyB,qBAAqB,CAAEC,wBAAwB,CAAC,CAAG1B,QAAQ,CAAC,KAAK,CAAC,CACzE,KAAM,CAAC2B,KAAK,CAAEC,QAAQ,CAAC,CAAG5B,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAAC6B,cAAc,CAAEC,iBAAiB,CAAC,CAAG9B,QAAQ,CAAC,KAAK,CAAC,CAE3DC,SAAS,CAAC,IAAM,CACd,KAAM,CAAA8B,QAAQ,CAAGjB,eAAe,CAACC,MAAM,CAAC,CACxC,GAAIgB,QAAQ,CAAE,CACZb,OAAO,CAACa,QAAQ,CAAC,CACnB,CAAC,IAAM,CACLC,KAAK,CAAC,gBAAgB,CAAC,CACvBhB,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,CAAE,CAACD,MAAM,CAAED,eAAe,CAAEE,QAAQ,CAAC,CAAC,CAEvC,KAAM,CAAAiB,kBAAkB,CAAG/B,WAAW,CAAC,IAAM,CAC3C4B,iBAAiB,CAAC,IAAI,CAAC,CAEvB,GAAIT,cAAc,GAAK,IAAI,EAAI,CAAAJ,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEiB,gBAAgB,IAAK,KAAK,EAAIjB,IAAI,CAACkB,SAAS,CAAChB,oBAAoB,CAAC,CAACiB,aAAa,GAAKf,cAAc,CAAE,CACxIO,QAAQ,CAACS,SAAS,EAAIA,SAAS,CAAG,CAAC,CAAC,CACtC,CAEA,GAAIlB,oBAAoB,CAAGF,IAAI,CAACkB,SAAS,CAACG,MAAM,CAAG,CAAC,CAAE,CACpDlB,uBAAuB,CAACmB,SAAS,EAAIA,SAAS,CAAG,CAAC,CAAC,CACnDjB,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,IAAM,CACLI,wBAAwB,CAAC,IAAI,CAAC,CAChC,CAEAI,iBAAiB,CAAC,KAAK,CAAC,CAC1B,CAAC,CAAE,CAACX,oBAAoB,CAAEE,cAAc,CAAEJ,IAAI,CAAC,CAAC,CAEhDhB,SAAS,CAAC,IAAM,KAAAuC,eAAA,CAAAC,qBAAA,CACd,GAAIxB,IAAI,EAAI,EAAAuB,eAAA,CAAAvB,IAAI,CAACkB,SAAS,UAAAK,eAAA,kBAAAC,qBAAA,CAAdD,eAAA,CAAiBrB,oBAAoB,CAAC,UAAAsB,qBAAA,iBAAtCA,qBAAA,CAAwCC,KAAK,IAAK,KAAK,CAAE,CACnElB,WAAW,CAACmB,QAAQ,CAAC1B,IAAI,CAACkB,SAAS,CAAChB,oBAAoB,CAAC,CAACuB,KAAK,CAAE,EAAE,CAAC,CAAC,CAErE,KAAM,CAAAE,aAAa,CAAGC,WAAW,CAAC,IAAM,CACtCrB,WAAW,CAACsB,QAAQ,EAAI,CACtB,GAAIA,QAAQ,EAAI,CAAC,CAAE,CACjBC,aAAa,CAACH,aAAa,CAAC,CAC5BX,kBAAkB,CAAC,CAAC,CACpB,MAAO,EAAC,CACV,CACA,MAAO,CAAAa,QAAQ,CAAG,CAAC,CACrB,CAAC,CAAC,CACJ,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,IAAMC,aAAa,CAACH,aAAa,CAAC,CAC3C,CAAC,IAAM,CACLpB,WAAW,CAAC,IAAI,CAAC,CACnB,CACF,CAAC,CAAE,CAACP,IAAI,CAAEE,oBAAoB,CAAEc,kBAAkB,CAAC,CAAC,CAEpD,KAAM,CAAAe,kBAAkB,CAAIC,KAAK,EAAK,CACpC3B,iBAAiB,CAAC2B,KAAK,CAAC,CAC1B,CAAC,CAED,GAAI,CAAChC,IAAI,CAAE,CACT,mBAAOV,IAAA,QAAA2C,QAAA,CAAK,iBAAe,CAAK,CAAC,CACnC,CAEA,GAAIzB,qBAAqB,CAAE,CACzB,mBACElB,IAAA,QAAK4C,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAC9B3C,IAAA,QAAK4C,SAAS,CAAC,2BAA2B,CAAAD,QAAA,CACvCjC,IAAI,CAACiB,gBAAgB,GAAK,KAAK,cAC9BzB,KAAA,CAAAE,SAAA,EAAAuC,QAAA,eACE3C,IAAA,OAAA2C,QAAA,CAAI,6BAA2B,CAAI,CAAC,cACpC3C,IAAA,QAAK6C,GAAG,CAAE/C,WAAY,CAACgD,GAAG,CAAC,QAAQ,CAACF,SAAS,CAAC,cAAc,CAAE,CAAC,cAC/D1C,KAAA,MAAAyC,QAAA,EAAG,gBAAc,cAAAzC,KAAA,SAAM0C,SAAS,CAAC,YAAY,CAAAD,QAAA,EAAEvB,KAAK,CAAC,GAAC,CAACV,IAAI,CAACkB,SAAS,CAACG,MAAM,EAAO,CAAC,EAAG,CAAC,cACxF/B,IAAA,WAAQ+C,OAAO,CAAEA,CAAA,GAAMtC,QAAQ,CAAC,iBAAiB,CAAE,CAAAkC,QAAA,CAAC,iBAAe,CAAQ,CAAC,EAC5E,CAAC,cAEH3C,IAAA,OAAA2C,QAAA,CAAI,yCAAuC,CAAI,CAChD,CACE,CAAC,CACH,CAAC,CAEV,CAEA,KAAM,CAAAK,eAAe,CAAGtC,IAAI,CAACkB,SAAS,CAAChB,oBAAoB,CAAC,CAE5D,mBACEZ,IAAA,QAAK4C,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAC9BzC,KAAA,QAAK0C,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxBzC,KAAA,QAAK0C,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC1BzC,KAAA,QAAK0C,SAAS,CAAC,gBAAgB,CAAAD,QAAA,EAC5B/B,oBAAoB,CAAG,CAAC,CAAC,GAAC,CAACF,IAAI,CAACkB,SAAS,CAACG,MAAM,EAC9C,CAAC,CACLf,QAAQ,GAAK,IAAI,eAChBhB,IAAA,QAAK4C,SAAS,CAAC,OAAO,CAAAD,QAAA,CACnB3B,QAAQ,CAAG,EAAE,CAAG,OAAOA,QAAQ,GAAG,CAAG,MAAMA,QAAQ,GAAG,CACpD,CACN,EACE,CAAC,cACNhB,IAAA,QAAK4C,SAAS,CAAC,eAAe,CAAAD,QAAA,CAC3BK,eAAe,CAACC,YAAY,CAC1B,CAAC,cACNjD,IAAA,QAAK4C,SAAS,CAAC,cAAc,CAAAD,QAAA,CAC1BK,eAAe,CAACE,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,CAAEV,KAAK,gBACzC1C,IAAA,WAEE4C,SAAS,CAAE,iBAAiB9B,cAAc,GAAK4B,KAAK,CAAG,UAAU,CAAG,EAAE,EAAG,CACzEK,OAAO,CAAEA,CAAA,GAAMN,kBAAkB,CAACC,KAAK,CAAE,CAAAC,QAAA,CAExCS,MAAM,CAACC,QAAQ,cACdrD,IAAA,QAAK6C,GAAG,CAAEO,MAAM,CAACC,QAAS,CAACP,GAAG,CAAE,UAAUJ,KAAK,CAAG,CAAC,EAAG,CAACE,SAAS,CAAC,cAAc,CAAE,CAAC,CAElFQ,MAAM,CAACE,IACR,EARIZ,KASC,CACT,CAAC,CACC,CAAC,cACN1C,IAAA,WACE4C,SAAS,CAAC,aAAa,CACvBG,OAAO,CAAErB,kBAAmB,CAC5B6B,QAAQ,CAAEjC,cAAe,CAAAqB,QAAA,CAExB/B,oBAAoB,CAAGF,IAAI,CAACkB,SAAS,CAACG,MAAM,CAAG,CAAC,CAAG,MAAM,CAAG,QAAQ,CAC/D,CAAC,EACN,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}